jQuery.ajaxSettings.traditional = true;

/******************************************************************/
/**↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ 공통  START    ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓**/

/**
 * 공통 클래스
 */
var cmmn = (function() {

	/**
	 * 이메일 유효성 체크
	 * @parameter	이메일 유효성 체크할 값
	 */
	var _isEmail = function(value) {
		var exptext = /^[A-Za-z0-9_\.\-]+@[A-Za-z0-9\-]+\.[A-Za-z0-9\-]+/;

		if (exptext.test(value) === false) {
			return false;
		}

		return true;
	}

	/**
	 * 빈값체크
	 * @parameter	빈 값 체크할 값
	 */
	var _isEmpty = function(value) {
		if( value == ""
			|| value == null
			|| value == undefined
			|| ( value != null && typeof value == "object" && !Object.keys(value).length ) ) {

			return true
		} else {
			return false
		}
	};

	/**
	 * 숫자체크
	 * @parameter	숫자 체크할 값
	 */
	var _isNumeric = function(value) {
		if (/[^0-9]/.test(value)) {
			return false;
		} else {
			return true;
		}
	}

	/**
	 * context path 가져오기
	 */
	var _getContextRoot = function() {
		var offset		= location.href.indexOf(location.host) + location.host.length;
		var contextPath	= location.href.substring(offset, location.href.indexOf('/', offset + 1));

		return contextPath;
	};

	/**
	 * 데이트 피커 설정
	 */
	var _setDatePicker = function(pageCode) {

		$("#" + pageCode + " .cal-wrap").each(function () {

	    	// 날짜 버튼
	        var _btn = $(this).find('.btn-cal');

	        // input 박스에 데이트피커 세팅
	        $(this).find('.ui-ipt').datepicker({
	            language	: 'ko-KR',		// 한국어 적용 파일이 따로 존재한다
	            trigger		: _btn,			// 날짜 버튼 클릭 시 데이트피커 팝업 생성
	            format		: 'yyyy-mm-dd',	// input 박스에 뿌려질 날짜형식
	            autoHide	: true
	        });
	    });
	}

	/**
	 * 마스킹 처리 / 뒤에서 부터 원하는 자리수 만큼 * 처리한다. (ex. admin123 -> admin***)
	 * @parameter	마스킹 처리할 문자, 마스킹 처리할 자릿수
	 */
	var _setMasking = function(str, digit) {

		if(_isEmpty(str)) {
			return '';
		}

		return str.replace(new RegExp(".{" + digit + "}$"), "*".repeat(digit));
	}

	/**
	 * form 의 input text, input password, input hidden, input radio, selectbox, textarea 의 값을 obj로 만들어준다.
	 * @parameter   obj로 만들 타겟 Id  ( form, div, span .. 가능)
	 */
	var _formToObj = function(frmId) {
		var $frm = $("#" + frmId);

		var dataObj = {};

		$.each($frm.find("input:text, input:password, input:hidden, input:radio, select, textarea"), function(i, v) {
			var $input 	= $(this);
			var name 	= $input.attr("name");
			var val		= "";

			if ($input.attr("type") === "radio") {
				val = $("#" + frmId + " input[name=" + name + "]:checked").val();
			} else {
				val = $input.val();
			}

			dataObj[name] = val;
		});

		return dataObj;
	}

	/**
	 * form 의 input text, input password, selectbox, textarea 의 값을 확인하여, class에 empty가 있으면 필수 값 체크를 한다.
	 * @parameter   필수 값 체크할 타겟 Id  ( form, div, span .. 가능)
	 */
	var _formEmptyChk = function(frmId) {
		var bool	= true,
        	isFlag	= true,
        	that 	= this;

		var $frm = $("#" + frmId);

		$.each($frm.find("input:text, input:password, select, textarea"), function(i, v) {
			// 반복문에서 브레이크를 쓰지 않기 위해서 작업.
	        if (isFlag === true) {
	        	var $input 	= $(this);

	        	if ($input.hasClass("empty") && $input.val() === "") {
	        		bool	= false;
	                isFlag	= false;

	                alert($(this).data("name") + "은/는 필수 입력 값입니다.");

	                $input.focus();
	        	}
	        }
		});

		return bool;
	}

	return {
		isEmpty			: _isEmpty,
		isNumeric		: _isNumeric,
		getContextRoot	: _getContextRoot,
		isEmail			: _isEmail,
		setDatePicker	: _setDatePicker,
		setMasking		: _setMasking,
		formToObj		: _formToObj,
		formEmptyChk	: _formEmptyChk
	}

}());

/**↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑      공통  END     ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑**/
/******************************************************************/