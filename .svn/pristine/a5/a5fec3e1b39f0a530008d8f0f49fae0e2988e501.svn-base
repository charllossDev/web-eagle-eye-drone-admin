<%@ page language="java" contentType="text/html; charset=UTF-8" %>
<%@ include file="/WEB-INF/jsp/egovframework/example/cmmn/common_lib.jsp" %>

<link rel="stylesheet" type="text/css" media="screen" href="<c:url value='/common/js/jquery-ui-1.12.1.custom/jquery-ui.css'/>"/>
<link rel="stylesheet" type="text/css" media="screen" href="<c:url value='/jqgrid/Guriddo_jqGrid_JS_5_3_2/css/trirand\ui.jqgrid.css'/>"/>

<script src="<c:url value='/common/js/jquery-ui-1.12.1.custom/jqueryui/jquery-ui.js'/>"></script>

<script type="text/javascript" src="<c:url value='/jqgrid/Guriddo_jqGrid_JS_5_3_2/js/trirand/i18n/grid.locale-kr.js'/>"></script>
<script type="text/javascript" src="<c:url value='/jqgrid/Guriddo_jqGrid_JS_5_3_2/js/trirand/src/jquery.jqGrid.js'/>"></script>
<script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/jszip/2.5.0/jszip.min.js"></script>

<script>

var dpBnnrDtlCls = {
		$bnnrDtlGrid		: $,
		
		girdInit			: function() {
			this.$bnnrDtlGrid = $("#dpBnnrDtl");
		},
		
		girdInitFn			: function() {
			
			this.$bnnrDtlGrid.jqGrid({
				colModel		: [
					{label : "배너내용", 	name : "bnnrConts", 	width: 150, 		align: "right"},
					{label : "배너이미지", 	name : "imgAttFile", 	width: 200, 		align: "left"},
					{label : "URL", 		name : "bnnrUrl", 		width: 150, 		align: "center"},
					{label : "노출순서", 	name : "sortSeq", 		width: 50, 			align: "center"},
					{label : "구분", 		name : "btn", 			width: 50, 			align: "center" , formatter : gridActionCls.gubunBtn}
				    // formatter 속성 : jqGrid 테이블에서 행을 그릴때마다 해당 정의된 컬럼을 만들때마다, 메서드(콜백함수)를 호출하여 해당 컬럼의 속성을 변경 할 수 있는 기능
				    // 예를들어 8개의 Rows 를 생성하면, 정의된 콜백함수는 8번 호출된다.
				],
				
				// autowidth 	: 테이블의 크기를반응형으로 설정
				autowidth		: true,
				// cellEdit 	: 테이블의 각 컬럼에 데이터 입력을 받을 수 있도록 설정 
				cellEdit		: true,
				// cellsubmit	: Ajax 타는것을 방지하는 기능
				cellsubmit		: "clientArray"
			})
		},	
}

	var CmmnJsUtil = {
	
		    isEmpty : function(val) {
		    val = val + "";
		    
		    // 공백제거
		     val = val.replace(/(\s*)/g, "");
		    
		        if (null == val || "" == val ||
		        val == undefined || typeof(val) == undefined ||
		        "undefined" == val || "NaN" == val) {
		            return true;
		        } else {
		            return false;
		        }
		    },
		    
		    isNumeric : function(val) {
	
		    if (/^[0-9]*$/.test(val)) {
		            return true;
		        } else {
		            return false;
		        }
		    }
		};

var validChkCls = {
		
		gridValidChkFn		: function() {
			var $bnnrDtlGrid		= $("#dpBnnrDtl");
			var dataList			= $bnnrDtlGrid.getRowData();
			var colModelArr			= $bnnrDtlGrid.getGridParam("colModel");
			var eachEmptyChk		= 0;
			var eachNumChk			= 0;
			
			for (var i = 0, length = dataList.length; i< length; i++) {
					
				for (var j = 0, cmLength = colModelArr.length -1; j< cmLength; j++){

					var data	= dataList[i][colModelArr[j]["name"]];
					var val		= CmmnJsUtil.isEmpty(data);
					
					if (val) {
						eachEmptyChk++;
					}
					
					if (colModelArr[j]["name"] === "sortSeq" && !(CmmnJsUtil.isNumeric(data))) {
						eachNumChk++;;
					}

				}
			}
						
			if (eachEmptyChk > 0) {
				
				alert("빈값이 존재합니다.");
				
				return false;
			}
			
			if (eachNumChk > 0) {
				
				alert("노출 순서는 숫자만 입력가능 ");
				
				return false;
			}
			
			return true;

		}, 
		
		empthChkFn			: function() {
			var bool = true; 
			
			$(".empty").each(function () {
				var $this = $(this);
				
				// 빈값 = " " 뛰어쓰기를 전부 없애주는 정규식
				var removeBlankData = $this.val().replace(/(\s*)/g, "");
				
				$this.val(removeBlankData);
				
				if (bool === true && $this.val() === "") {
					alert($this.data("name") + "은/는 필수 입력 값입니다.");
					
					bool = false;
				}

			});
			
			return bool;
		},
		
		radioChkFn			: function() {
			
			var bool = true;
			
			$(".radioOnly").each(function () {
				var $this = $(this);
				
				var radioChkedLength = $this.find("input[type='radio']:checked").length;
				
				if (bool === true && radioChkedLength < 1) {
					alert($this.data("name") + "은/는 필수 입력 값입니다.");
					
					bool = false;
				}
			});
			
			return bool;
		}
}

var gridActionCls = {
		
		validChkcallFn		: function() {
			
			
			if (!validChkCls.gridValidChkFn()) {
				return false;
			}
			
			if (!validChkCls.radioChkFn()) {
				return false;
			}
			
			if (!validChkCls.empthChkFn()) {
				return false;
			};
			
			return true;
		},
		
		insertFn			: function() {
			
			$("#dpBnnrDtl").editCell(0, 0, false);
			
			// 유효성 체크
			if(!this.validChkcallFn()) {
				return ;
			}
			
			// 객체 리터럴 
			
			var bnnrMngData = {
				
				// 프로퍼티 생성
				"subj"		: $("input[name='subj']").val(),
				"dpStrtDe"	: $("input[name='dpStrtDe']").val(),
				"dpEndDe"	: $("input[name='dpEndDe']").val(),
				"dpYn"		: $("input[name='dpYn']").val()
							
			}
			
			
			var dataList = $("#dpBnnrDtl").getRowData();
			
			console.log(bnnrMngData);
			console.log(dataList);
			
			$.ajax({
				
				url 	: "<c:url value='/saveBnnrData.do'/>",
				type	: "POST",
				data	: { "bnnrMngData" : JSON.stringify(bnnrMngData),
							"gridRowData" : JSON.stringify(dataList)
						  },
							
				success	: function(data) {
					
					if(data.result === "success") {
						alert("저장 성공");
						
						location.href = "<c:url value='/dpBnnrMng.do'/>";
					} else {
						alert("저장 실패");
					}
				}
			})
		},
		
		delRowFn			: function(rowId) {
			var $bnnrDtlGrid		= $("#dpBnnrDtl");
			
			$bnnrDtlGrid.delRowData(rowId);
			
		},
		gubunBtn			: function(cellValue, options, rowObject) {
			// console.log("cellValue  : ", cellValue);
			// console.log("options : " , options);
			// console.log("rowObject : ", rowObject);

			// A 테그에서도 또 함수를 호출하여 수행할 수 있다.
			var data = "<a href='#' onclick='gridActionCls.delRowFn(" + options.rowId + ")'>행삭제</a>";
			
			// jqGrid는 a테그를 리턴하여도 그 테그를 생성해준다. 클래스도 가능하다.
			return data;
		},
		
		addRowFn			: function() {
			var $bnnrDtlGrid	= $("#dpBnnrDtl");
			var addData			= {};

			var totalRecord		= 0
			var colModelArr		= $bnnrDtlGrid.getGridParam("colModel");;
			var idsArr			= $bnnrDtlGrid.jqGrid("getDataIDs");
			
			if (idsArr.length !== 0) {
				
				totalRecord = Math.max.apply(null, idsArr);
			}
			
			for (var i = 0, length = colModelArr.length; i < length; i++) {
				addData[colModelArr[i].name] = "";

				if (colModelArr[i].name !== "btn"){
					$bnnrDtlGrid.setColProp(colModelArr[i].name, 		{editable: true});
				} else {
					$bnnrDtlGrid.setColProp(colModelArr[i].name, 		{editable: false});
				}
			}
			
			$bnnrDtlGrid.addRowData(totalRecord + 1, addData);

		}
}

$(function() {
	
	dpBnnrDtlCls.girdInit();
	dpBnnrDtlCls.girdInitFn();
});

</script>

	<div class="row">
	  <div class="col-12">
		<div class="card">
	          <div class="card-body">
	              <h4 class="card-title">Static</h4>
	             	<legend>배너 등록</legend>
					<table cellspacing="0" border="1" class="tbl-type type1">
				       	<caption>배너 등록</caption>
				       	<colgroup>
				           	<col style="width:13%;"/>
				           	<col style="width:37%;"/>
				           	<col style="width:13%;"/>
				           	<col style="width:37%;"/>
				       	</colgroup>
				       	<tbody>
				           	<tr>
				               	<th scope="row">제목</th>
				               	<td scope="row" colspan="3">
				                   	<input type="text" name="subj" class="ui-ipt empty" data-name="제목" style="width:100%" maxlength="50" value="">
				               	</td>
				           	</tr>
				           	<tr>
				               	<th scope="row">전시 기간</th>
				               	<td scope="row" colspan="3">
					     	        <div class="cal-wrap">
					                   	<input type="text" name="dpStrtDe" class="ui-ipt empty" data-name="전시시작일자" data-date="start" readonly>
					                    <button type="button" class="btn-cal"><span class="ico-cal-01"></span></button>
					                </div>
					                <div class="cal-wrap">
					                   <input type="text" name="dpEndDe" class="ui-ipt empty" data-name="전시종료일자" data-date="end" readonly>
					                   <button type="button" class="btn-cal"><span class="ico-cal-01"></span></button>
									</div>
								</td>
				           	</tr>
				           	<tr>
								<th scope="row">공개 여부</th>
				               	<td scope="row" colspan="3">
					               	<div class="radioOnly" data-name="전시여부">
					               		<ul class="ui-radio">
					                    	<li>
					                        	<input type="radio" id="rdo1" name="dpYn" value="Y" checked="checked" />
					                        	<label for="rdo1"><span>Y</span></label>
					                      	</li>
					                      	<li>
					                           	<input type="radio" id="rdo2" name="dpYn" value="N" />
					                           	<label for="rdo2"><span>N</span></label>
					                      	</li>
					                   	</ul>
					                </div>
				               	</td>
				           	</tr>
				       	</tbody>
				   	</table>
	          </div>
	      </div>
	      <!-- Column -->
	      <div class="card">
	          <div class="card-body">
	              <h4 class="card-title">Editable with Datatable</h4>
	              <div class="btn-wrap mgt-20">
				   <div class="right txt-right">
				      <ul>
				         <li><button type="button" class="btn-box-16" onclick="gridActionCls.addRowFn()">추 가</button></li>
				      </ul>
				   </div>
				</div>
				<table id="dpBnnrDtl"></table>
				<div class="center">
			    	<ul>
			      		<li><button type="button" class="btn-box-06" onclick="gridActionCls.insertFn()">등록</button></li>
			      		<li><button type="button" class="btn-box-07">취소</button></li>
			    	</ul>
			  	</div>	              
	          </div>
	      </div>
	      <!-- Column -->
	      <!-- Column -->
	      
	    </div>
	</div>
	<!-- ============================================================== -->
	<!-- End PAge Content -->
	<!-- ============================================================== -->

	    
